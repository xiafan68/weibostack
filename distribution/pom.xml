<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>dase</groupId>
		<artifactId>weibostack</artifactId>
		<version>0.0.1</version>
	</parent>
	<artifactId>distribution</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.7</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>dase</groupId>
			<artifactId>microblogdao</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>dase</groupId>
			<artifactId>socialtsquery-client</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>dase</groupId>
			<artifactId>socialtsquery</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>dase</groupId>
			<artifactId>tweetstreaming</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>dase</groupId>
			<artifactId>weibocrawler</artifactId>
			<version>1.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <version>2.6</version> 
				<executions> <execution> <id>distro-assembly</id> <phase>package</phase> 
				<goals> <goal>single</goal> </goals> <configuration> <descriptors> <descriptor>src/assembly/bin.xml</descriptor> 
				</descriptors> </configuration> </execution> </executions> </plugin> -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<configuration>
					<copyResourceDirectory>true</copyResourceDirectory>
					<resourceDirectory></resourceDirectory>
					<!-- Set the target configuration directory to be used in the bin scripts -->
					<configurationDirectory>conf</configurationDirectory>
					<!-- Copy the contents from "/src/main/config" to the target configuration 
						directory in the assembled application -->
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<!-- Include the target configuration directory in the beginning of 
						the classpath declaration in the bin scripts -->
					<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
					<!-- set alternative assemble directory -->
					<assembleDirectory>${project.build.directory}/weibostack</assembleDirectory>

					<!-- Generate bin scripts for windows and unix pr default -->
					<platforms>
						<platform>windows</platform>
						<platform>unix</platform>
					</platforms>
					<repositoryLayout>flat</repositoryLayout>
					<repositoryName>lib</repositoryName>
					<programs>
						<program>
							<mainClass>timeseries.TimeSeriesProducer</mainClass>
							<id>timeseriesgen</id>
							<jvmSettings>
								<initialMemorySize>20m</initialMemorySize>
								<maxMemorySize>256m</maxMemorySize>
								<maxStackSize>128m</maxStackSize>
								<extraArguments>
									<extraArgument>-agentlib:jdwp=transport=dt_socket,address=127.0.0.1:8888,server=y,suspend=n</extraArgument>
								</extraArguments>
							</jvmSettings>
						</program>
						<program>
							<mainClass>timeseries.TimeSeriesSegmentation</mainClass>
							<id>timeseriesseg</id>
						</program>
						<program>
							<mainClass>timeseries.WordStatisticProducer</mainClass>
							<id>wordstats</id>
						</program>
						<program>
							<mainClass>timeseries.RetweetStatsGen</mainClass>
							<id>retweetstats</id>
						</program>
						<program>
							<mainClass>server.TKSearchServer</mainClass>
							<id>TKSearchServer</id>
							<jvmSettings>
								<initialMemorySize>1024m</initialMemorySize>
								<maxMemorySize>2048m</maxMemorySize>
								<maxStackSize>128m</maxStackSize>
							</jvmSettings>
						</program>
						<program>
							<mainClass>DataCrawler.Main_public</mainClass>
							<id>publiccrawler</id>
						</program>
						<program>
							<mainClass>DataCrawler.Main_repost</mainClass>
							<id>repostcrawler</id>
						</program>
						<program>
							<mainClass>DataCrawler.KafkaJobInit</mainClass>
							<id>KafkaJobInit</id>
						</program>
						<program>
							<mainClass>casdb.TweetCassandraConsumer</mainClass>
							<id>tweetcassandraconsumer</id>
						</program>
						<program>
							<mainClass>util.IndexLoader</mainClass>
							<id>indexloader</id>
							<jvmSettings>
								<initialMemorySize>1248M</initialMemorySize>
								<maxMemorySize>5048M</maxMemorySize>
								<maxStackSize>128m</maxStackSize>
							</jvmSettings>
						</program>
					</programs>
				</configuration>
				<executions>
					<execution>
						<id>genscripts</id>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/weibostack</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>